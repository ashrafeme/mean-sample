angular.module("app",["ngRoute"]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(t,o){e.login(t,o).then(function(t){console.log(t)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostSvc",function(t,e){e.fetch().success(function(e){t.posts=e}),t.addPost=function(){t.postBody&&e.create({username:"dickeyxxx",body:t.postBody}).success(function(e){t.posts.unshift(e),t.postBody=null})}}]),angular.module("app").service("PostSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},e.login=function(o,n){return t.post("/api/sessions",{username:o,password:n}).then(function(t){return e.token=t.data,e.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImxvZ2luLmN0cmwuanMiLCJwb3N0cy5jdHJsLmpzIiwicG9zdHMuc3ZjLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInVzZXIiLCJjb25zb2xlIiwibG9nIiwiUG9zdFN2YyIsImZldGNoIiwic3VjY2VzcyIsInBvc3RzIiwiYWRkUG9zdCIsInBvc3RCb2R5IiwiY3JlYXRlIiwiYm9keSIsInBvc3QiLCJ1bnNoaWZ0Iiwic2VydmljZSIsIiRodHRwIiwidGhpcyIsImdldCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwic3ZjIiwiZ2V0VXNlciIsImhlYWRlcnMiLCJYLUF1dGgiLCJ0b2tlbiIsInZhbCIsImRhdGEiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0EsWUNEQUQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLGFBQUEsU0FBQSxVQUFBLFNBQUFDLEVBQUFDLEdBQ0FELEVBQUFFLE1BQUEsU0FBQUMsRUFBQUMsR0FDQUgsRUFBQUMsTUFBQUMsRUFBQUMsR0FDQUMsS0FBQSxTQUFBQyxHQUNBQyxRQUFBQyxJQUFBRixTQ0xBVCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLFVBQUEsU0FBQUMsRUFBQVMsR0FDQUEsRUFBQUMsUUFDQUMsUUFBQSxTQUFBQyxHQUNBWixFQUFBWSxNQUFBQSxJQUdBWixFQUFBYSxRQUFBLFdBRUFiLEVBQUFjLFVBQ0FMLEVBQUFNLFFBQ0FaLFNBQUEsWUFDQWEsS0FBQWhCLEVBQUFjLFdBRUFILFFBQUEsU0FBQU0sR0FDQWpCLEVBQUFZLE1BQUFNLFFBQUFELEdBQ0FqQixFQUFBYyxTQUFBLFdDaEJBakIsUUFBQUMsT0FBQSxPQUNBcUIsUUFBQSxXQUFBLFFBQUEsU0FBQUMsR0FFQUMsS0FBQVgsTUFBQSxXQUVBLE1BQUFVLEdBQUFFLElBQUEsZUFHQUQsS0FBQU4sT0FBQSxTQUFBRSxHQUNBLE1BQUFHLEdBQUFILEtBQUEsYUFBQUEsT0NUQXBCLFFBQUFDLE9BQUEsT0FDQXlCLFFBQUEsaUJBQUEsU0FBQUMsR0FDQUEsRUFDQUMsS0FBQSxLQUFBMUIsV0FBQSxZQUFBMkIsWUFBQSxlQUNBRCxLQUFBLGFBQUExQixXQUFBLGVBQUEyQixZQUFBLGtCQUNBRCxLQUFBLFVBQUExQixXQUFBLFlBQUEyQixZQUFBLGtCQ0xBN0IsUUFBQUMsT0FBQSxPQUNBcUIsUUFBQSxXQUFBLFFBQUEsU0FBQUMsR0FDQSxHQUFBTyxHQUFBTixJQUVBTSxHQUFBQyxRQUFBLFdBQ0EsTUFBQVIsR0FBQUUsSUFBQSxjQUNBTyxTQUFBQyxTQUFBVCxLQUFBVSxVQUdBSixFQUFBekIsTUFBQSxTQUFBQyxFQUFBQyxHQUNBLE1BQUFnQixHQUFBSCxLQUFBLGlCQUNBZCxTQUFBQSxFQUFBQyxTQUFBQSxJQUVBQyxLQUFBLFNBQUEyQixHQUVBLE1BREFMLEdBQUFJLE1BQUFDLEVBQUFDLEtBQ0FOLEVBQUFDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIsW1xuICAgICduZ1JvdXRlJ1xuICAgIF0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcihcIkxvZ2luQ3RybFwiLGZ1bmN0aW9uKCRzY29wZSxVc2VyU3ZjKXtcbiAgICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSxwYXNzd29yZCl7XG4gICAgICAgIFVzZXJTdmMubG9naW4odXNlcm5hbWUscGFzc3dvcmQpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHVzZXIpIHtcbiAgICAgICAgICAgY29uc29sZS5sb2codXNlcik7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pOyIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoXCJQb3N0c0N0cmxcIixmdW5jdGlvbigkc2NvcGUsUG9zdFN2Yyl7XG4gICAgICAgICAgICBQb3N0U3ZjLmZldGNoKClcbiAgICAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKHBvc3RzKXtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnBvc3RzPXBvc3RzOyAgIFxuICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyBhZGQgcG9zdCB0byBwb3N0cyBsaXN0ICAgIFxuICAgICAgICAgICAgJHNjb3BlLmFkZFBvc3Q9ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAvLyBvbmx5IGFkZCBwb3N0IGlmIGl0IGhhcyBwb3N0Ym9keVxuICAgICAgICAgICAgICAgIGlmKCRzY29wZS5wb3N0Qm9keSl7XG4gICAgICAgICAgICAgICAgICAgIFBvc3RTdmMuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOlwiZGlja2V5eHh4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5OiRzY29wZS5wb3N0Qm9keVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihwb3N0KXtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSAgICBcbiAgICB9KTsiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdQb3N0U3ZjJyxmdW5jdGlvbigkaHR0cCl7XG4gICAgXG4gICAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KFwiL2FwaS9wb3N0c1wiKVxuICAgIH1cbiAgICBcbiAgICB0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uKHBvc3Qpe1xuICAgICAgcmV0dXJuICAkaHR0cC5wb3N0KFwiL2FwaS9wb3N0c1wiLHBvc3QpO1xuICAgIH1cbn0pOyAgICAiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpe1xuICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgLndoZW4oJy8nLHtjb250cm9sbGVyOidQb3N0c0N0cmwnLHRlbXBsYXRlVXJsOidwb3N0cy5odG1sJ30pXG4gICAgLndoZW4oJy9yZWdpc3Rlcicse2NvbnRyb2xsZXI6J1JlZ2lzdGVyQ3RybCcsdGVtcGxhdGVVcmw6J3JlZ2lzdGVyLmh0bWwnfSlcbiAgICAud2hlbignL2xvZ2luJyx7Y29udHJvbGxlcjonTG9naW5DdHJsJyx0ZW1wbGF0ZVVybDonbG9naW4uaHRtbCd9KVxufSk7IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnVXNlclN2YycsZnVuY3Rpb24oJGh0dHApIHtcbiAgICB2YXIgc3ZjID0gdGhpcztcbiAgICBcbiAgICBzdmMuZ2V0VXNlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnLHtcbiAgICAgICAgICAgaGVhZGVyczp7J1gtQXV0aCc6dGhpcy50b2tlbn1cbiAgICAgICB9KVxuICAgIH1cbiAgICBzdmMubG9naW49ZnVuY3Rpb24gKHVzZXJuYW1lLHBhc3N3b3JkKSB7XG4gICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycse1xuICAgICAgICAgICB1c2VybmFtZTp1c2VybmFtZSxwYXNzd29yZDpwYXNzd29yZFxuICAgICAgIH0pIFxuICAgICAgIC50aGVuKGZ1bmN0aW9uKHZhbCkge1xuICAgICAgICAgICBzdmMudG9rZW4gPSB2YWwuZGF0YVxuICAgICAgICAgICByZXR1cm4gc3ZjLmdldFVzZXIoKTtcbiAgICAgICB9KVxuICAgIH1cbn0pIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9